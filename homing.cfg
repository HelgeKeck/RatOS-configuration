# WARNING: DO NOT EDIT THIS FILE
# To override settings from this file, you can copy and paste the relevant
# sections into your printer.cfg and change it there.

#####
# CONFIGURATION VARIABLES
#####

[gcode_macro RatOS]
variable_z_probe: "static"                     # static|stowable = z-probe type
variable_safe_home_x: "middle"                 # float|middle = z-homing x location
variable_safe_home_y: "middle"                 # float|middle = z-homing y location
variable_stowable_probe_stop_on_error: False   # internal use only. Do not touch! 


[ratos_homing]
axes: xyz
z_hop: 15         # homing z-hop distance
z_hop_speed: 15   # homing z-hop speed
gcode:
	# visual feedback
	_LED_ON

	# config
	{% set prev_stop_on_error = printer["gcode_macro RatOS"].stowable_probe_stop_on_error %}

	# reset IDEX mode
	{% if printer["dual_carriage"] is defined %}
		{% set default_toolhead = printer["gcode_macro RatOS"].default_toolhead|default(0)|int %}
		{% set target_idex_mode = printer["dual_carriage"].carriage_1|lower %}
		_IDEX_SINGLE
		_SELECT_TOOL T={default_toolhead} TOOLSHIFT=false
	{% endif %}

	# Make stowable probe assertion failures cause an emergency stop
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE=True

	# Wait for moves to finish
	M400
	# Absolute positioning
	G90

	# home printer
	{% set X = true if params.X is defined else false %}
	{% set Y = true if params.Y is defined else false %}
	{% set Z = true if params.Z is defined else false %}
	{% if printer["gcode_macro RatOS"].home_y_first|default(false)|lower == 'true' %}
		HOME_Y X={X} Y={Y} Z={Z}
		HOME_X X={X} Y={Y} Z={Z}
	{% else %}
		HOME_X X={X} Y={Y} Z={Z}
		HOME_Y X={X} Y={Y} Z={Z}
	{% endif %}
	HOME_Z X={X} Y={Y} Z={Z}

	# Reset stowable probe stop on error state
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=stowable_probe_stop_on_error VALUE={prev_stop_on_error}

	# restore IDEX mode
	{% if printer["dual_carriage"] is defined %}
		{% if target_idex_mode == "copy" %}
			_IDEX_COPY
		{% elif target_idex_mode == "mirror" %}
			_IDEX_MIRROR
		{% endif %}
	{% endif %}


[gcode_macro HOME_X]
gcode:
	# config
	{% set x_homed = 'x' in printer.toolhead.homed_axes %}
	{% set sensorless = true if printer.configfile.settings.stepper_x.use_sensorless_homing|default(false)|lower == 'true' else false %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set printable_x_max = printer["gcode_macro RatOS"].printable_x_max|float %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
		{% set safe_home_x = printable_x_max / 2 %}
	{% endif %}

	# parameter
	{% set X = true if params.X|lower == 'true' else false %}
	{% set Y = true if params.Y|lower == 'true' else false %}
	{% set Z = true if params.Z|lower == 'true' else false %}

	DEBUG_ECHO PREFIX="HOME_X" MSG="printable_x_max: {printable_x_max}, safe_home_x: {safe_home_x}, axis_maximum.x: {printer.toolhead.axis_maximum.x}, bed_margin_x: {printer['gcode_macro RatOS'].bed_margin_x}"

	# Handle toolhead settings
	CACHE_TOOLHEAD_SETTINGS KEY="home_x"

	# home x
	{% if X or not Y and not Z %}

		# IDEX sanity check
		{% if sensorless and printer["dual_carriage"] is defined %}
			{ action_emergency_stop("sensorless homing not supported on IDEX!") }
		{% endif %}

		# Set sensorless homing acceleration (important!)
		{% if sensorless %}
			M204 S1000
		{% endif %}

		# Home X
		G28 X

		{% if printer["dual_carriage"] is defined %}
			# park secondary toolhead in its parking position instead of the endstop position
			{% set default_toolhead = printer["gcode_macro RatOS"].default_toolhead|default(0)|int %}
			{% set parking_position = printer["gcode_macro T%s" % (0 if default_toolhead==1 else 1)].parking_position|float %}
			SET_DUAL_CARRIAGE CARRIAGE={0 if default_toolhead==1 else 1} MODE=PRIMARY
			G1 X{parking_position} F{speed}
			SET_DUAL_CARRIAGE CARRIAGE={default_toolhead} MODE=PRIMARY
		{% endif %}

		# move to safe x
		G0 X{safe_home_x} F{speed}

		 # Wait for moves to finish
		M400

		# set homing state
		{% set x_homed = True %}

	{% endif %}

	# Handle toolhead settings
	RESTORE_TOOLHEAD_SETTINGS KEY="home_x"

[gcode_macro HOME_Y]
gcode:
	# config
	{% set y_homed = 'y' in printer.toolhead.homed_axes %}
	{% set sensorless = true if printer.configfile.settings.stepper_y.use_sensorless_homing|default(false)|lower == 'true' else false %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set printable_y_max = printer["gcode_macro RatOS"].printable_y_max|float %}
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
		{% set safe_home_y = printable_y_max / 2 %}
	{% endif %}

	# parameter
	{% set X = true if params.X|lower == 'true' else false %}
	{% set Y = true if params.Y|lower == 'true' else false %}
	{% set Z = true if params.Z|lower == 'true' else false %}

	DEBUG_ECHO PREFIX="HOME_Y" MSG="printable_y_max: {printable_y_max}, safe_home_y: {safe_home_y}, axis_maximum.y: {printer.toolhead.axis_maximum.y}, bed_margin_y: {printer['gcode_macro RatOS'].bed_margin_y}"

	# Handle toolhead settings
	CACHE_TOOLHEAD_SETTINGS KEY="home_y"

	# home y
	{% if Y or not X and not Z %}

		# Set sensorless homing acceleration (important!)
		{% if sensorless %}
			M204 S1000
		{% endif %}

		# Home X
		G28 X

		# move to safe y
		G0 Y{safe_home_y} F{speed}
		M400 # Wait for moves to finish

		 # Wait for moves to finish
		M400

		# set homing state
		{% set y_homed = True %}

	{% endif %}

	# Handle toolhead settings
	RESTORE_TOOLHEAD_SETTINGS KEY="home_y"

[gcode_macro HOME_Z]
gcode:
	# config
	{% set x_homed = 'x' in printer.toolhead.homed_axes %}
	{% set y_homed = 'y' in printer.toolhead.homed_axes %}
	{% set z_probe = printer["gcode_macro RatOS"].z_probe %}

	# beacon contact config
	{% set beacon_contact_z_homing = true if printer["gcode_macro RatOS"].beacon_contact_z_homing|default(false)|lower == 'true' else false %}

	# parameter
	{% set X = true if params.X|lower == 'true' else false %}
	{% set Y = true if params.Y|lower == 'true' else false %}
	{% set Z = true if params.Z|lower == 'true' else false %}

	DEBUG_ECHO PREFIX="HOME_Z" MSG="x_homed: {x_homed}, y_homed: {y_homed}, z_probe: {z_probe}, beacon_contact_z_homing: {beacon_contact_z_homing}"

	# home z
	{% if Z or not Y and not X %}
		RATOS_ECHO MSG="Homing Z"
		{% if x_homed == False or y_homed == False %}
			{ action_emergency_stop("X and Y must be homed before homing Z") }
		{% else %}
			{% if z_probe == "stowable" %}
				DEPLOY_PROBE
				_MOVE_TO_SAFE_Z_HOME
				{% if printer.configfile.settings.beacon is defined and beacon_contact_z_homing %}
					BEACON_AUTO_CALIBRATE SKIP_MODEL_CREATION=1
					_MOVE_TO_SAFE_Z_HOME Z_HOP=True
				{% else %}
					G28 Z
				{% endif %}
				_Z_HOP
				STOW_PROBE
			{% else %}
				_MOVE_TO_SAFE_Z_HOME
				{% if printer.configfile.settings.beacon is defined and beacon_contact_z_homing %}
					BEACON_AUTO_CALIBRATE SKIP_MODEL_CREATION=1
					_MOVE_TO_SAFE_Z_HOME Z_HOP=True
				{% else %}
					G28 Z
				{% endif %}
				_Z_HOP
			{% endif %}
		{% endif %}
	{% endif %}


[gcode_macro _Z_HOP]
description: Move Z axis up by Z_HOP distance at Z_HOP_SPEED. In relative mode it will move Z axis up by Z_HOP distance. In absolute mode it will move Z axis to Z_HOP distance.
gcode:
	{% set z_hop = printer.configfile.config.ratos_homing.z_hop|float %}
	{% set z_hop_speed = printer.configfile.config.ratos_homing.z_hop_speed|float * 60 %}

	G0 Z{z_hop} F{z_hop_speed}

[gcode_macro _MOVE_TO_SAFE_Z_HOME]
description: Move to safe home position with optional Z_HOP (pass Z_HOP=True as parameter)
gcode:
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set printable_x_max = printer["gcode_macro RatOS"].printable_x_max|float %}
	{% set printable_y_max = printer["gcode_macro RatOS"].printable_y_max|float %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
		{% set safe_home_x = printable_x_max / 2 %}
	{% endif %}
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
		{% set safe_home_y = printable_y_max / 2 %}
	{% endif %}

	{% if params.Z_HOP is defined %}
		_Z_HOP
	{% endif %}

	DEBUG_ECHO PREFIX="_MOVE_TO_SAFE_Z_HOME" MSG="axis_maximum.x: {printer.toolhead.axis_maximum.x}, axis_maximum.y: {printer.toolhead.axis_maximum.y}, bed_margin_x: {printer['gcode_macro RatOS'].bed_margin_x}, bed_margin_y: {printer['gcode_macro RatOS'].bed_margin_y}, safe_home_x: {safe_home_x}, safe_home_y: {safe_home_y}, printable_x_max: {printable_x_max}, printable_y_max: {printable_y_max}"

	# Go to safe home
	G0 X{safe_home_x} Y{safe_home_y} F{speed}

[gcode_macro MAYBE_HOME]
description: Only home unhomed axis
variable_is_kinematic_position_overriden: False
gcode:
	{% if printer["gcode_macro MAYBE_HOME"].is_kinematic_position_overriden|lower == 'true' %}
		RATOS_ECHO MSG="SET_CENTER_KINEMATIC_POSITION has been abused. Homing all axes. Please refrain from using SET_CENTER_KINEMATIC_POSITION outside of debugging purposes."
		G28
		SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=False
	{% else %}
		{% set axes = '' %}
		{% set isHomed = true %}
		{% set axesToHome = '' %}
		{% if params.X is defined %}
			{% set axes = axes ~ 'X ' %}
			{% if 'x' not in printer.toolhead.homed_axes %}
				{% set isHomed = false %}
				{% set axesToHome = axesToHome ~ 'X ' %}
			{% endif %}
		{% endif %}
		{% if params.Y is defined %}
			{% set axes = axes ~ 'Y ' %}
			{% if 'y' not in printer.toolhead.homed_axes %}
				{% set isHomed = false %}
				{% set axesToHome = axesToHome ~ 'Y ' %}
			{% endif %}
		{% endif %}
		{% if params.Z is defined %}
			{% set axes = axes ~ 'Z ' %}
			{% if 'z' not in printer.toolhead.homed_axes %}
				{% set isHomed = false %}
				{% set axesToHome = axesToHome ~ 'Z ' %}
			{% endif %}
		{% endif %}
		{% if params.X is not defined and params.Y is not defined and params.Z is not defined %}
			{% set axes = '' %}
			{% if 'x' not in printer.toolhead.homed_axes %}
				{% set isHomed = false %}
				{% set axesToHome = axesToHome ~ 'X ' %}
			{% endif %}
			{% if 'y' not in printer.toolhead.homed_axes %}
				{% set isHomed = false %}
				{% set axesToHome = axesToHome ~ 'Y ' %}
			{% endif %}
			{% if 'z' not in printer.toolhead.homed_axes %}
				{% set isHomed = false %}
				{% set axesToHome = axesToHome ~ 'Z ' %}
			{% endif %}
		{% endif %}
		{% if isHomed is false %}
			RATOS_ECHO MSG="Homing {axesToHome}"
			G28 {axesToHome}
		{% else %}
			RATOS_ECHO MSG="All requested axes already homed, skipping.."
		{% endif %}
	{% endif %}
